version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - echo Operation  Architecture
      - docker version | grep 'OS/Arch'
      - rm -rf .env
      - touch .env
      - >
        if [ -f .env ]; then
          echo "File environments exist."
          echo "DB_USERNAME=$DB_USERNAME" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_HOST=$DB_HOST" >> .env
          echo "DB_NAME=$DB_NAME" >> .env
          echo "RESEND_KEY=$RESEND_KEY" >> .env
          echo "VERIFY_PATH=$VERIFY_PATH" >> .env
          echo "RESEND_SENDER=$RESEND_SENDER" >> .env
          echo "VERIFY_EMAIL_SECRET=$VERIFY_EMAIL_SECRET" >> .env
          echo "VERIFY_EMAIL_EXPIRE=$VERIFY_EMAIL_EXPIRE" >> .env
          echo "ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET" >> .env
          echo "ACCESS_TOKEN_EXPIRE=$ACCESS_TOKEN_EXPIRE" >> .env
          echo "REFRESH_TOKEN_SECRET=$REFRESH_TOKEN_SECRET" >> .env
          echo "REFRESH_TOKEN_EXPIRE=$REFRESH_TOKEN_EXPIRE" >> .env
          echo "FORGOT_CODE_EXPIRE=600" >> .env
          else
          echo "Have exist file environments"
        fi
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - printf '[{"name":"ecommerce-api","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files: imagedefinitions.json
